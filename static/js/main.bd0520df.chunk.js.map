{"version":3,"sources":["Components/NavBar/NavBar.js","Pages/LandingPage/LandingPage.js","Components/Project/Project.js","Pages/Portfolio/Portfolio.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","className","to","id","active","LandingPage","Fragment","alt","src","target","href","small","large","Project","title","github","deployed","image","Portfolio","Projects","map","o","index","key","Footer","class","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+xCAIe,SAASA,EAAOC,GAC7B,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAAMA,UAAU,2BAA2BC,GAAG,KAA9C,gBACA,kBAAC,IAAD,CAAMC,GAAG,UAAUF,UAAW,eAAiC,QAAjBD,EAAMI,OAAmB,UAAW,IAAKF,GAAG,KAA1F,OACA,kBAAC,IAAD,CAAMD,UAAW,eAAiC,cAAjBD,EAAMI,OAAyB,UAAW,IAAKF,GAAG,cAAnF,c,kBCJS,SAASG,IACtB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,CAAQF,OAAO,QACf,yBAAKH,UAAU,eACb,yBAAKE,GAAG,eAAeI,IAAI,eAAeC,IAAI,2FAC9C,wCACA,6BACA,o8BAWA,yBAAKP,UAAU,qBACb,yBAAKA,UAAU,yBACb,uBAAGQ,OAAO,QAAQC,KAAK,iCACrB,uBAAGT,UAAU,uCACb,+CAGJ,yBAAKA,UAAU,yBACb,uBAAGQ,OAAO,QAAQC,KAAK,sDACrB,uBAAGT,UAAU,yCACb,iDAGJ,yBAAKE,GAAG,cAAcF,UAAU,yBAC9B,kBAAC,IAAD,CACEU,MAAM,yGACNC,MAAM,oFACNL,IAAI,oBAEN,yC,wBCxCG,SAASM,EAAT,GAAmD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,MACxD,OACE,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,gBACb,4BAAKa,GACL,yBAAKb,UAAU,iBACb,uBAAGQ,OAAO,QAAQC,KAAMK,GAAQ,uBAAGd,UAAU,iBAA7C,UACA,uBAAGQ,OAAO,QAAQC,KAAMM,GAAU,uBAAGf,UAAU,eAA/C,0BAGJ,yBAAKM,IAAKO,EAAON,IAAKS,KCPb,SAASC,IACtB,OACE,kBAAC,IAAMZ,SAAP,KACE,kBAAC,EAAD,CAAQF,OAAO,cACf,yBAAKH,UAAU,aACZkB,EAASC,KAAI,SAACC,EAAGC,GAChB,OAAO,kBAAC,EAAD,iBAAaD,EAAb,CAAgBE,IAAKD,U,MCTvB,SAASE,IACtB,OACE,yBAAKvB,UAAU,UACb,2BAAG,uBAAGwB,MAAM,oBAAZ,sBCiBSC,MAZf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,IAAD,CAAQ0B,SAAUC,oBAChB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1B,IACjC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,aAAaC,UAAWb,KAE5C,kBAAC,EAAD,QCNcc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.bd0520df.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nexport default function NavBar(props){\r\n  return(\r\n    <nav className=\"Navbar\">\r\n      <Link className='Navbar-brand Navbar-link' to=\"/\">Nicholas Cox</Link>\r\n      <Link id=\"bioLink\" className={'Navbar-link'+ (props.active === 'Bio' ? ' active': '')} to=\"/\">Bio</Link>\r\n      <Link className={'Navbar-link'+ (props.active === 'Portfolio' ? ' active': '')} to=\"/portfolio\">Portfolio</Link>\r\n    </nav>\r\n  )\r\n}","import React from 'react';\r\nimport NavBar from '../../Components/NavBar/NavBar';\r\nimport './LandingPage.css';\r\nimport ModalImage from \"react-modal-image\";\r\n\r\nexport default function LandingPage(){\r\n  return(\r\n    <React.Fragment>\r\n      <NavBar active=\"Bio\"/>\r\n      <div className=\"LandingPage\">\r\n        <img id=\"profileImage\" alt=\"Nicholas Cox\" src=\"https://res.cloudinary.com/dvqaajrs0/image/upload/v1578069797/bjkz2zsbktlam8gomk6u.jpg\"/>\r\n        <h2>About Me</h2>\r\n        <hr />\r\n        <p>Full-Stack Web Developer leveraging a background in music and customer service to work \r\n          in harmony with other developers and create positive user experiences. Earned a Bachelorâ€™s \r\n          Degree in Web Journalism from the University Of Memphis in 2015, and a certificate in Full \r\n          Stack Web Development from Vanderbilt University in February of 2020,  specializing in React, \r\n          NodeJS, Express, and MongoDB. Motivated and always curious, I use a variety of resources to \r\n          solve problems in innovative and creative ways. My goal in every project is to create seamless, \r\n          easy-to-use applications that are pleasant for both the users and the other developers involved. \r\n          I applied my knowledge of NodeJS and Express in a recent project where I worked in a team of four \r\n          to create an application that pairs people who are listing garages for rent to people who want \r\n          to use them. Looking forward to applying knowledge in a professional, team environment.\r\n        </p>\r\n        <div className=\"LandingPage-links\">\r\n          <div className=\"LandingPage-linkGroup\">\r\n            <a target=\"blank\" href=\"https://github.com/nich-o-las\">\r\n              <i className=\"fa fa-github LandingPage-clickable\"></i>\r\n              <p>Github Profile</p>\r\n            </a>\r\n          </div>\r\n          <div className=\"LandingPage-linkGroup\">\r\n            <a target=\"blank\" href=\"https://www.linkedin.com/in/nicholas-cox-20bb38b9/\">\r\n              <i className=\"fa fa-linkedin LandingPage-clickable\"></i>\r\n              <p>LinkedIn Profile</p>\r\n            </a>\r\n          </div>\r\n          <div id=\"resumeGroup\" className=\"LandingPage-linkGroup\">\r\n            <ModalImage\r\n              small=\"https://res.cloudinary.com/dvqaajrs0/image/upload/c_thumb,w_200,g_face/v1580942599/ncResumeFeb2020.png\"\r\n              large=\"https://res.cloudinary.com/dvqaajrs0/image/upload/v1580942599/ncResumeFeb2020.png\"\r\n              alt=\"Nick Cox Resume\"\r\n            />\r\n            <p>Resume</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n};","import React from 'react'\r\nimport './Project.css'\r\n\r\nexport default function Project({title, github, deployed, image}){\r\n  return(\r\n    <div className=\"Project\">\r\n      <div className=\"Project-info\">\r\n        <h3>{title}</h3>\r\n        <div className=\"Project-links\">\r\n          <a target=\"blank\" href={github}><i className=\"fa fa-github\"></i>Github</a>\r\n          <a target=\"blank\" href={deployed}><i className=\"fa fa-link\"></i>Deployed Application</a>\r\n        </div>\r\n      </div>\r\n      <img alt={title} src={image} />\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport NavBar from '../../Components/NavBar/NavBar';\r\nimport './Portfolio.css';\r\nimport Projects from '../../utils/projects.json'\r\nimport Project from '../../Components/Project/Project'\r\n\r\nexport default function Portfolio(){\r\n  return(\r\n    <React.Fragment>\r\n      <NavBar active=\"Portfolio\"/>\r\n      <div className=\"Portfolio\">\r\n        {Projects.map((o, index)=>{\r\n          return <Project {...o} key={index}/>\r\n        })}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n};","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport default function Footer(){\r\n  return(\r\n    <div className=\"Footer\">\r\n      <p><i class=\"fa fa-copyright\"/>Nicholas Cox 2020</p>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport LandingPage from './Pages/LandingPage/LandingPage';\nimport Portfolio from './Pages/Portfolio/Portfolio';\nimport Footer from './Components/Footer/Footer'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL || ''}>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/portfolio\" component={Portfolio} />\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}